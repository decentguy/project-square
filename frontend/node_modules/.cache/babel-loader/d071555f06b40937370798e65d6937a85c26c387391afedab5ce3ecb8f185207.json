{"ast":null,"code":"var _jsxFileName = \"/Users/sm/Documents/x/showcase/src/components/Brands.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Filters from './Filters';\nimport SectionTitle from './sectionTitle';\nimport { Columns, Container, Image } from 'react-bulma-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Brands = () => {\n  _s();\n  const [brands, setBrands] = useState([]);\n  const [filteredBrands, setFilteredBrands] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [sortOption, setSortOption] = useState('');\n  useEffect(() => {\n    const fetchBrands = async () => {\n      const response = await axios.get('/api/brands'); // Replace with actual API endpoint\n      setBrands(response.data);\n      setFilteredBrands(response.data);\n    };\n    fetchBrands();\n  }, []);\n  const handleFilter = filter => {\n    setFilter(filter);\n    const filtered = brands.filter(brand => brand.name.toLowerCase().includes(filter.toLowerCase()));\n    setFilteredBrands(filtered);\n  };\n  const handleSort = sortOption => {\n    setSortOption(sortOption);\n    let sorted = [...filteredBrands];\n    if (sortOption === 'name-asc') {\n      sorted.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (sortOption === 'name-desc') {\n      sorted.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    setFilteredBrands(sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"brands\",\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onSort: handleSort,\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brands-grid\",\n      children: filteredBrands.map(brand => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/brands/${brand.logo}`,\n          alt: brand.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, brand.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"m-6\",\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          title: \"You\\u2019ll be in good company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Columns, {\n          mt: 6,\n          children: filteredBrands.map(brand => /*#__PURE__*/_jsxDEV(Columns.Column, {\n            size: 'one-third',\n            pt: 1,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: `/images/brands/${brand.logo}`,\n              size: '',\n              className: \"image is-square\",\n              alt: brand.name\n            }, brand.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Brands, \"30LyCt9Itt50epz37tzwuCAhS3Y=\");\n_c = Brands;\nexport default Brands;\nvar _c;\n$RefreshReg$(_c, \"Brands\");","map":{"version":3,"names":["React","useEffect","useState","axios","Filters","SectionTitle","Columns","Container","Image","jsxDEV","_jsxDEV","Brands","_s","brands","setBrands","filteredBrands","setFilteredBrands","filter","setFilter","sortOption","setSortOption","fetchBrands","response","get","data","handleFilter","filtered","brand","name","toLowerCase","includes","handleSort","sorted","sort","a","b","localeCompare","className","children","onSort","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","src","logo","alt","id","title","mt","Column","size","pt","_c","$RefreshReg$"],"sources":["/Users/sm/Documents/x/showcase/src/components/Brands.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Filters from './Filters';\nimport { Brand } from '../types';\nimport SectionTitle from './sectionTitle';\nimport { Columns, Container, Heading, Image } from 'react-bulma-components';\n\nconst Brands: React.FC = () => {\n  const [brands, setBrands] = useState<Brand[]>([]);\n  const [filteredBrands, setFilteredBrands] = useState<Brand[]>([]);\n  const [filter, setFilter] = useState('');\n  const [sortOption, setSortOption] = useState('');\n\n  useEffect(() => {\n    const fetchBrands = async () => {\n      const response = await axios.get<Brand[]>('/api/brands'); // Replace with actual API endpoint\n      setBrands(response.data);\n      setFilteredBrands(response.data);\n    };\n    fetchBrands();\n  }, []);\n\n  const handleFilter = (filter: string) => {\n    setFilter(filter);\n    const filtered = brands.filter((brand: Brand) =>\n      brand.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    setFilteredBrands(filtered);\n  };\n\n  const handleSort = (sortOption: string) => {\n    setSortOption(sortOption);\n    let sorted = [...filteredBrands];\n    if (sortOption === 'name-asc') {\n      sorted.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (sortOption === 'name-desc') {\n      sorted.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    setFilteredBrands(sorted);\n  };\n\n  return (\n    <section className=\"brands\">\n      <Filters onSort={handleSort} onFilter={handleFilter} />\n      <div className=\"brands-grid\">\n        {filteredBrands.map((brand) => (\n          <div key={brand.id} className=\"brand\">\n            <img src={`/images/brands/${brand.logo}`} alt={brand.name} />\n          </div>\n        ))}\n      </div>\n    \n    <div>\n    <Container className='m-6'>\n        <SectionTitle title='Youâ€™ll be in good company'/>\n        <Columns mt={6}>\n            {\n              filteredBrands.map((brand: Brand)=>(\n                  <Columns.Column size={'one-third'} pt={1}>\n                      <Image key={brand.id} src={`/images/brands/${brand.logo}`} size={''} className='image is-square' alt={brand.name}/> \n                  </Columns.Column>\n              ))\n            }\n        </Columns>\n    </Container>\n</div>\n</section>\n\n  );\n};\n\nexport default Brands;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,OAAO,EAAEC,SAAS,EAAWC,KAAK,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAU,EAAE,CAAC;EACjE,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAU,aAAa,CAAC,CAAC,CAAC;MAC1DT,SAAS,CAACQ,QAAQ,CAACE,IAAI,CAAC;MACxBR,iBAAiB,CAACM,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAIR,MAAc,IAAK;IACvCC,SAAS,CAACD,MAAM,CAAC;IACjB,MAAMS,QAAQ,GAAGb,MAAM,CAACI,MAAM,CAAEU,KAAY,IAC1CA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,MAAM,CAACY,WAAW,CAAC,CAAC,CACxD,CAAC;IACDb,iBAAiB,CAACU,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMK,UAAU,GAAIZ,UAAkB,IAAK;IACzCC,aAAa,CAACD,UAAU,CAAC;IACzB,IAAIa,MAAM,GAAG,CAAC,GAAGjB,cAAc,CAAC;IAChC,IAAII,UAAU,KAAK,UAAU,EAAE;MAC7Ba,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,IAAI,CAACQ,aAAa,CAACD,CAAC,CAACP,IAAI,CAAC,CAAC;IACrD,CAAC,MAAM,IAAIT,UAAU,KAAK,WAAW,EAAE;MACrCa,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,IAAI,CAACQ,aAAa,CAACF,CAAC,CAACN,IAAI,CAAC,CAAC;IACrD;IACAZ,iBAAiB,CAACgB,MAAM,CAAC;EAC3B,CAAC;EAED,oBACEtB,OAAA;IAAS2B,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACzB5B,OAAA,CAACN,OAAO;MAACmC,MAAM,EAAER,UAAW;MAACS,QAAQ,EAAEf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDlC,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBvB,cAAc,CAAC8B,GAAG,CAAElB,KAAK,iBACxBjB,OAAA;QAAoB2B,SAAS,EAAC,OAAO;QAAAC,QAAA,eACnC5B,OAAA;UAAKoC,GAAG,EAAE,kBAAkBnB,KAAK,CAACoB,IAAI,EAAG;UAACC,GAAG,EAAErB,KAAK,CAACC;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADrDjB,KAAK,CAACsB,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAERlC,OAAA;MAAA4B,QAAA,eACA5B,OAAA,CAACH,SAAS;QAAC8B,SAAS,EAAC,KAAK;QAAAC,QAAA,gBACtB5B,OAAA,CAACL,YAAY;UAAC6C,KAAK,EAAC;QAA2B;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjDlC,OAAA,CAACJ,OAAO;UAAC6C,EAAE,EAAE,CAAE;UAAAb,QAAA,EAETvB,cAAc,CAAC8B,GAAG,CAAElB,KAAY,iBAC5BjB,OAAA,CAACJ,OAAO,CAAC8C,MAAM;YAACC,IAAI,EAAE,WAAY;YAACC,EAAE,EAAE,CAAE;YAAAhB,QAAA,eACrC5B,OAAA,CAACF,KAAK;cAAgBsC,GAAG,EAAE,kBAAkBnB,KAAK,CAACoB,IAAI,EAAG;cAACM,IAAI,EAAE,EAAG;cAAChB,SAAS,EAAC,iBAAiB;cAACW,GAAG,EAAErB,KAAK,CAACC;YAAK,GAArGD,KAAK,CAACsB,EAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8F;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvG,CACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAGV,CAAC;AAAChC,EAAA,CA9DID,MAAgB;AAAA4C,EAAA,GAAhB5C,MAAgB;AAgEtB,eAAeA,MAAM;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}